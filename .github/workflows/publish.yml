name: Publish
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'package.json'

permissions:
  id-token: write
  contents: read

env:
  CDN_BUCKET: gc-design-system-production-cdn
  CDN_REGION: ca-central-1
  PACKAGE_NAME: "@cdssnc/gcds-utility"

jobs:
  build-deploy:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Publish @cdssnc/gcds-utility
        uses: JS-DevTools/npm-publish@0897172f266b017b55f0d68271c4d9124eb20c69
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Configure AWS credentials using OIDC
        if: steps.publish.outputs.id != ''
        uses: aws-actions/configure-aws-credentials@04b98b3f9e85f563fb061be8751a0352327246b0 # v3.0.1
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-utility-apply
          role-session-name: CDNPublish
          aws-region: ${{ env.CDN_REGION }}

      - name: Update CDN
        if: steps.publish.outputs.id != ''
        run: |
          VERSION="$(cat package.json | jq -r .version)"
          PUBLISHED_PACKAGE="${{ env.PACKAGE_NAME }}@$VERSION"

          aws s3 sync ./dist s3://${{ env.CDN_BUCKET }}/"$PUBLISHED_PACKAGE"/dist --delete
          aws s3 sync ./dist s3://${{ env.CDN_BUCKET }}/${{ env.PACKAGE_NAME }}@latest/dist --delete
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key "$PUBLISHED_PACKAGE"/dist/gcds-utility.css
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key ${{ env.PACKAGE_NAME }}@latest/dist/gcds-utility.css

          aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_CLOUDFRONT_DIST_ID }} --paths "/*"

      - name: Slack notify on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: Publish @cdssnc/gcds-utility failed: <https://github.com/cds-snc/gcds-utility/actions/workflows/compile-core.yml|Compile Core>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}
