@use './defaults.scss' as *;
@use './mixins.scss' as mixins;

@mixin gridTemplate($trackClass, $track) {
  @each $classState, $state in $states {
    @for $i from 1 through 12 {
      .#{$classState}grid-#{$trackClass}-#{$i}#{$state} {
        grid-template-#{$track}: repeat($i, minmax(0, 1fr));
      }
    }

    .#{$classState}grid-#{$trackClass}-none#{$state} {
      grid-template-#{$track}: none;
    }
  }

  @each $classBreakpoint, $breakpoint in $breakpoints {
    @media only screen and (width > $breakpoint) {
      @each $classState, $state in $states {
        @for $i from 1 through 12 {
          .#{$classBreakpoint}\:#{$classState}grid-#{$trackClass}-#{$i}#{$state} {
            grid-template-#{$track}: repeat($i, minmax(0, 1fr));
          }
        }

        .#{$classBreakpoint}\:#{$classState}grid-#{$trackClass}-none#{$state} {
          grid-template-#{$track}: none;
        }
      }
    }
  }
}

/* --- Grid Template Columns --- */

@include gridTemplate(cols, columns);

/* --- Grid Template Rows --- */

@include gridTemplate(rows, rows);

/* --- Place Content --- */

$placeContent: (
  around: space-around,
  between: space-between,
  center: center,
  end: end,
  evenly: space-evenly,
  start: start,
  stretch: stretch,
) !default;

@include mixins.generateClasses($placeContent, 'place-content-', place-content);

/* --- Place Items --- */

$placeItems: (
  center: center,
  end: end,
  start: start,
  stretch: stretch,
) !default;

@include mixins.generateClasses($placeItems, 'place-items-', place-items);

/* --- Place Self --- */

$placeSelf: (
  auto: auto,
  center: center,
  end: end,
  start: start,
  stretch: stretch,
) !default;

@include mixins.generateClasses($placeSelf, 'place-self-', place-self);
