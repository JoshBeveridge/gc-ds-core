@import './defaults.scss';
@import './mixins.scss';

/* --- Font --- */

$font: (
  h1: h1,
  h2: h2,
  h3: h3,
  h4: h4,
  h5: h5,
  h6: h6,
  text: text,
  caption: caption,
) !default;

@each $classState, $state in $states {
  @each $className, $value in $font {
    .#{$classState}font-#{'' + $className}#{$state} {
      font: var(--gcds-font-#{$value});

      @media only screen and (width < 48em) {
        font: var(--gcds-font-#{$value}-mobile);
      }
    }
  }
}

/* --- Font Families --- */

$fontFamily: (
  heading: var(--gcds-font-families-heading),
  body: var(--gcds-font-families-body),
  monospace: var(--gcds-font-families-monospace),
  icon: var(--gcds-font-families-icon),
) !default;

@include generateClasses($fontFamily, 'font-family-', font-family);

/* --- Font Sizes --- */

$fontSize: (
  h1: h1,
  h2: h2,
  h3: h3,
  h4: h4,
  h5: h5,
  h6: h6,
  text: text,
  caption: caption,
) !default;

@each $classState, $state in $states {
  @each $className, $value in $fontSize {
    .#{$classState}font-size-#{'' + $className}#{$state} {
      font-size: var(--gcds-font-sizes-#{$value});

      @media only screen and (width < 48em) {
        font-size: var(--gcds-font-sizes-#{$value}-mobile);
      }
    }
  }
}

/* --- Font Styles --- */

$fontStyle: (
  italic: italic,
  normal: normal,
) !default;

@include generateClasses($fontStyle, 'font-', font-style);

/* --- Font Weights --- */

$fontWeight: (
  light: var(--gcds-font-weights-light),
  regular: var(--gcds-font-weights-regular),
  medium: var(--gcds-font-weights-medium),
  semibold: var(--gcds-font-weights-semibold),
  bold: var(--gcds-font-weights-bold),
) !default;

@include generateClasses($fontWeight, 'font-', font-weight);

/* --- Line Heights --- */

$lineHeight: (
  caption: var(--gcds-line-heights-caption),
  h1: var(--gcds-line-heights-h1),
  h2: var(--gcds-line-heights-h2),
  h3: var(--gcds-line-heights-h3),
  h4: var(--gcds-line-heights-h4),
  h5: var(--gcds-line-heights-h5),
  h6: var(--gcds-line-heights-h6),
  text: var(--gcds-line-heights-text),
) !default;

@include generateClasses($lineHeight, 'line-', line-height);

/* --- Text Align --- */

$textAlign: (
  center: center,
  left: left,
  justify: justify,
  right: right,
) !default;

@include generateClasses($textAlign, 'text-', text-align);

/* --- Text Colours --- */

$textColors: (
  current: currentColor,
  inherit: inherit,
  light: var(--gcds-text-light),
  primary: var(--gcds-text-primary),
  secondary: var(--gcds-text-secondary),
  transparent: transparent,
) !default;

@include generateClasses($textColors, 'text-', color);

/* --- Text Overflow --- */

@include classWithBreakpoints('text-clip') {
  text-overflow: clip;
}

@include classWithBreakpoints('text-truncate') {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* --- Text Transform --- */

$textTransform: (
  capitalize: capitalize,
  lowercase: lowercase,
  none: none,
  uppercase: uppercase,
) !default;

@include generateClasses($textTransform, 'text-', text-transform);

/* --- Word Break --- */

$wordBreak: (
  all: break-all,
  normal: normal,
  word: break-word,
) !default;

@include generateClasses($wordBreak, 'break-', word-break);
